$colors: () !default;

$color-inherit-alias: 'inherit' !default;
@if($color-inherit-alias) {
	$colors: map-merge(('#{$color-inherit-alias}': inherit), $colors);
}

@function color($name) {
	@return map-get($colors, $name);
}

$color-alias: '' !default;
$background-color-alias: 'bg-' !default;
$focus-outline-alias: 'fo-' !default;
$border-color-alias: 'bc-' !default;
$text-shadow-alias: 'ts-' !default;

@each $name, $value in $colors {
	.#{$color-alias}#{$name} {
		/*hrpy:{"section": "text-color", "color": "#{$name}"}*/
		color: $value;
	}
	.#{$background-color-alias}#{$name} {
		/*hrpy:{"section": "background-color", "color": "#{$name}"}*/
		background-color: $value;
	}
	.#{$focus-outline-alias}#{$name} {
		/*hrpy:{"section": "focus-outline", "color": "#{$name}"}*/
		box-shadow: 0 0 0 2px $value;
	}
	.#{$text-shadow-alias}#{$name} {
		/*hrpy:{"section": "text-shadow", "color": "#{$name}"}*/
		text-shadow: 0 1px 1px $value;
	}
	.#{$border-color-alias}#{$name} {
		/*hrpy:{"section": "border-color", "color": "#{$name}"}*/
		border-color: $value;
	}
}

/*
Creates rules with selectors like `.active-bg-black:active`
*/
@each $state in $states {
	@each $name, $value in $colors {
		.#{$state}-#{$color-alias}#{$name}:#{$state} {
			/*hrpy:{"class": "#{$state}-#{$color-alias}#{$name}", "section": "text-color", "color": "#{$name}", "state": "#{$state}"}*/
			@extend .#{$color-alias}#{$name};
		}
		.#{$state}-#{$background-color-alias}#{$name}:#{$state} {
			/*hrpy:{"class": "#{$state}-#{$background-color-alias}#{$name}", "section": "background-color", "color": "#{$name}", "state": "#{$state}"}*/
			@extend .#{$background-color-alias}#{$name};
		}
		.#{$state}-#{$focus-outline-alias}#{$name}:#{$state} {
			/*hrpy:{"class": "#{$state}-#{$focus-outline-alias}#{$name}", "section": "focus-outline", "color": "#{$name}", "state": "#{$state}"}*/
			@extend .#{$focus-outline-alias}#{$name};
		}
		.#{$state}-#{$text-shadow-alias}#{$name}:#{$state} {
			/*hrpy:{"class": "#{$state}-#{$text-shadow-alias}#{$name}", "section": "text-shadow", "color": "#{$name}", "state": "#{$state}"}*/
			@extend .#{$text-shadow-alias}#{$name};
		}
		.#{$state}-#{$border-color-alias}#{$name}:#{$state} {
			/*hrpy:{"class": "#{$state}-#{$border-color-alias}#{$name}", "section": "border-color", "color": "#{$name}", "state": "#{$state}"}*/
			@extend .#{$border-color-alias}#{$name};
		}
	}
}

/*
Creates rules with selectors like `.is-active.active-bg-black`
*/
@each $state-class, $state in $state-classes {
	@each $name, $value in $colors {
		.#{$state}-#{$color-alias}#{$name}.#{$state-class} {
			@extend .#{$color-alias}#{$name};
		}
		.#{$state}-#{$background-color-alias}#{$name}.#{$state-class} {
			@extend .#{$background-color-alias}#{$name};
		}
		.#{$state}-#{$focus-outline-alias}#{$name}.#{$state-class} {
			@extend .#{$focus-outline-alias}#{$name};
		}
		.#{$state}-#{$text-shadow-alias}#{$name}.#{$state-class} {
			@extend .#{$text-shadow-alias}#{$name};
		}
		.#{$state}-#{$border-color-alias}#{$name}.#{$state-class} {
			@extend .#{$border-color-alias}#{$name};
		}
	}
}
